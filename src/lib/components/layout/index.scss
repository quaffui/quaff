@use "$css/mixins";
@use "$css/variables";

:root {
  --header-height: 64px;
  --footer-height: 80px;

  --left-railbar-width: 88px;
  --right-railbar-width: 88px;

  --left-drawer-width: 300px;
  --right-drawer-width: 300px;
}

.q-layout {
  position: relative;
  width: 100%;
  height: 100%;
  min-width: 100%;
  min-height: 100%;
  overflow: hidden;

  & > .q-layout__content {
    height: 100%;
    overflow: auto;
    transition: padding var(--speed3);
  }
}

.q-layout > .q-footer {
  z-index: 4;
  position: absolute;
  top: auto;
  right: 0px;
  bottom: 0px;
  left: 0px;
  height: var(--footer-height);
  min-height: unset;
  border-radius: 0;

  &--fixed {
    position: fixed;

    &::before {
      margin: 0;
    }
  }

  & > nav {
    height: 100%;
    min-height: unset;
  }

  & ~ .q-layout__content {
    padding-bottom: var(--footer-height);
  }
}

.q-layout > .q-railbar {
  position: absolute;
  top: 0px;
  right: auto;
  bottom: 0px;
  left: auto;
  height: 100%;
  overflow: auto;
  transition:
    top var(--speed3),
    bottom var(--speed3);

  &--fixed {
    position: fixed;
  }

  &--left {
    left: 0px;

    &.q-railbar--bordered {
      border-right: 0.0625rem solid var(--outline);
    }
  }

  &--right {
    right: 0px;

    &.q-railbar--bordered {
      border-left: 0.0625rem solid var(--outline);
    }
  }

  & > .q-list {
    gap: 0.5rem;
  }

  & > .q-list > .q-item {
    flex-direction: column;
    border-radius: 2rem;
    align-items: center;
    justify-content: center;
    padding: 0 8px;
    gap: 0.25em;

    &.q-link::after {
      all: unset !important;
    }

    & > .q-item__section {
      justify-content: start;
    }

    & > i {
      transition: var(--speed1) padding linear;
      padding: 0.25rem;
    }

    &:is(:hover, :focus, &--active) > i {
      background-color: var(--secondary-container);
      color: var(--on-secondary-container);
      padding-inline: 1.5rem;
      font-variation-settings:
        "FILL" 1,
        "wght" 400,
        "opsz" 24;
    }
  }
}

.q-layout > .q-drawer {
  border-radius: 0;

  $horizontal: "left", "right";
  $vertical: "top", "bottom";

  & .q-list > .q-item.q-link {
    border-radius: 2rem;
    overflow: hidden;

    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      border-radius: inherit;
      background: var(--secondary-container);
      z-index: -1;
      transform: scaleX(0.32);
      transition-duration: 0.2s;
      transition-property: transform, opacity;
      transition-timing-function: linear;
    }

    &.q-item--active {
      color: var(--on-secondary-container);

      &::before {
        opacity: 1;
        transform: scaleX(1);
      }
    }
  }
}

// Offset for content
.q-layout > .q-layout__content {
  padding: var(--header-height) var(--offset-right) var(--offset-bottom) var(--offset-left);
}

// Offset for drawer with railbar
@each $side in ("left", "right") {
  .q-railbar.q-railbar--#{$side}:not([style="display: none"]) ~ .q-drawer.q-drawer--#{$side} {
    #{$side}: var(--#{$side}-railbar-width);
  }

  // Reset railbar width
  .q-railbar.q-railbar--#{$side}[style="display: none"] ~ .q-drawer.q-drawer--#{$side} {
    --#{$side}-railbar-width: 0px;
  }
}
